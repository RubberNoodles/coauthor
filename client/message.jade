template(name="messageMaybe")
  if group
    if matchingGroup
      +message
    else
      +mismatchedGroupMessage
  else
    +messageBad

template(name="message")
  div
    +React component=Message messageID=messageID

template(name="readMessage")
  div
    +React component=ReadMessage message=message

template(name="submessageHeader")
  +rootHeader
  +submessage

template(name="rootHeader")
  if root
    with root
      .panel.root(data-message=_id).panel-default
        .panel-heading.compact.title
          .message-left-buttons.push-down.btn-group.btn-group-xs
            a.btn.btn-info.focusButton(aria-label="Focus", href="{{pathFor 'message' group=group message=_id}}")
              span.fas.fa-sign-in-alt(aria-hidden="true")
          span.space
          span.title.panel-title.tex2jax !{formatTitleBold}&#8203;
          +messageTags
          +messageLabels

template(name="messageBad")
  if ready
    .alert.alert-danger The message &ldquo;<b>#{message}</b>&rdquo; does not exist or you do not have permission to access it.
    unless currentUser
      p You probably need to log in.
  else
    .alert.alert-warning Loading message &ldquo;<b>#{message}</b>&rdquo;...

template(name="mismatchedGroupMessage")
  if wildGroup
    .alert.alert-warning Redirecting to group &ldquo;<b>#{group}</b>&rdquo;...
  else
    .alert.alert-danger
      p Message &ldquo;<b>#{_id}</b>&rdquo; does not belong to group &ldquo;<b>#{routeGroup}</b>&rdquo;.
      p Perhaps it moved?  Here is a link to the message in the correct group, &ldquo;<b>#{group}</b>&rdquo;:
      p
        a(href="{{pathFor 'message' group=group message=_id}}") {{urlFor 'message' group=group message=_id}}

template(name="submessage")
  div
    +React component=Submessage message=message

template(name="belowEditor")
  .belowEditor.clearfix
    .pull-right.btn-group
      if changedHeight
        button.btn.btn-xs.btn-warning.setHeight Set Default Height
      if preview
        if sideBySide
          button.btn.btn-default.sideBySidePreview Top-Bottom
        else
          button.btn.btn-default.sideBySidePreview Side-by-Side
        button.btn.btn-default.togglePreview No Preview
      else
        button.btn.btn-default.togglePreview Preview
    if saved
      .alert.alert-success.save-alert All changes saved.!{otherEditors}
    else
      if editStopping
        .alert.alert-danger.save-alert Unsaved changes. Stopping editing once saved...!{otherEditors}
      else
        .alert.alert-danger.save-alert Unsaved changes. Saving...!{otherEditors}

template(name="messageTags")
  span.messageTags
    each tags
      a(href=linkToTag).tagLink
        span.tag.label.label-default= key
      |  

template(name="messageLabels")
  span.messageLabels
    if deleted
      span.label.label-danger Deleted
    //-else
    unless published
      span.label.label-warning Unpublished
    if private
      span.label.label-info Private
    if minimized
      span.label.label-success Minimized

template(name="threadPrivacy")
  if canSuper
    .btn-group
      button.btn.btn-warning.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false", tabindex=tabindex).threadPrivacyToggle
        | Thread Privacy
        span.caret
      ul.dropdown-menu(role="menu")
        each privacyOptions
          li.threadPrivacy(class=active)
            a(href="#",data-code=code)= display

template(name="emojiButtons")
  .btn-group.pull-left.emojiButtons
    if canReply
      if emoji.count
        //-button.btn.btn-default.emojiOpenMenu.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="true")
        button.btn.btn-default.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false", title="Add emoji response")
          span.fas.fa-plus.emoji-plus(aria-hidden="true")
          span.far.fa-smile.emoji-face(aria-hidden="true")
        ul.dropdown-menu(role="menu").emojiMenu
          each emoji
            li
              a.emojiAdd(href="#",data-symbol=symbol, data-toggle="tooltip", data-placement="bottom", data-original-title=description, data-container="body")
                span.fas(class="fa-#{symbol} #{class}")
      each emojiMessages
        button.btn.btn-default.emojiToggle(data-symbol=symbol, data-toggle="tooltip", data-placement="bottom", data-original-title=who, data-container="body")
          span.fas(class="fa-#{symbol} #{class}")
          span #{count}
    else
      each emojiMessages
        button.btn.btn-default.emojiToggle.disabled(data-symbol=symbol, data-toggle="tooltip", data-placement="bottom", data-original-title=who, data-container="body")
          span.fas(class="fa-#{symbol} #{class}")
          span #{count}

template(name="keyboardSelector")
  .btn-group
    button.btn.btn-default.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false", tabindex=tabindex)
      | #{keyboard}
      span.caret
    ul.dropdown-menu(role="menu")
      li.editorKeyboard(class="{{activeKeyboard 'normal'}}")
        a(href="#",data-keyboard="normal") Normal
      li.editorKeyboard(class="{{activeKeyboard 'vim'}}")
        a(href="#",data-keyboard="vim") Vim
      li.editorKeyboard(class="{{activeKeyboard 'emacs'}}")
        a(href="#",data-keyboard="emacs") Emacs

template(name="formatSelector")
  .btn-group
    button.btn.btn-default.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false", tabindex=tabindex)
      if format
        | {{capitalize format}}
      else
        | {{capitalize defaultFormat}}
      span.caret
    ul.dropdown-menu(role="menu")
      each formats
        li.editorFormat(class=active)
          a(href="#",data-format=format)= capitalized

template(name="superdelete")
  .modal
    .modal-dialog
      .modal-content
        .modal-header
          h2 Confirm Superdelete
        .modal-body
          p Are you sure you want to delete &ldquo;#{title}&rdquo; (#{_id}) by #{creator}?
          p Superdelete destroys all logs of the message ever existing and cannot be undone.  Use only for silly mistakes.
        .modal-footer
          button.btn.btn-warning.shallowSuperdeleteButton Superdelete node, not descendants
          button.btn.btn-danger.deepSuperdeleteButton Recursively superdelete node and descendants
          button.btn.btn-success.cancelButton.fullwidth Cancel

template(name="messageReplace")
  input.replaceInput(type="file", style="display:none")
  button.btn.btn-info.replaceButton(tabindex=tabindex) Replace File

template(name="messageParentDialog")
  .modal
    .modal-dialog.modal-lg.messageParentDialog
      .modal-content
        //-.flexColumn
        .modal-header
          h2 Move Message
        .modal-body.flexColumn
          .row.header-row
            .col-xs-6 New parent for bottom message:
            .col-xs-6
              input.form-control.parent.typeahead(type="text", placeholder="Message title/ID", value='')
          .row.flexShrink.flexRow
            .col-xs-6.scrollbars
              with oldParent
                +groupOrMessage
            .col-xs-6.scrollbars
              with parent
                +groupOrMessage
          .row
            .col-xs-12.parentArrow
              .parentArrow1
              span.fas.fa-times
              |<div class="parentArrow2"></div><div class="parentArrow3"></div>
              span.fas.fa-check
              .parentArrow4
          .row.flexShrink.flexRow
            .col-xs-12.scrollbars
              with child
                +groupOrMessage
        .modal-footer.flexRow.flexCenter
          //-.flexColumn
          .pull-left.hidden-xs.hidden-sm
            span.fas.fa-lightbulb
          .flexGrow
            span.hidden-xs.hidden-sm You can move messages by dragging in the table of contents.
          .btn-group.space.flexNoShrink
            button.btn.btn-danger.messageParentButton Move
            button.btn.btn-success.cancelButton.fullwidth Cancel

template(name="groupOrMessage")
  if loadedMessage
    +readMessage
  else
    .panel.panel-primary
      .panel-heading.compact.title.clearfix
        span.push-down.btn-group.btn-group-xs
          .fake-btn &#8203;
        if isGroup
          span.title.panel-title
            | #{group}
          i.pull-right.push-down (root message in this group)
        else
          span.title.panel-title
            | Message #{_id}
          i.pull-right.push-down (unloaded message)
